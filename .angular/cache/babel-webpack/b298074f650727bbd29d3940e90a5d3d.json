{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nexport class UsuarioFiltro {\n  constructor() {\n    this.nome = '';\n    this.email = '';\n    this.pagina = 0;\n    this.itensPorPagina = 10;\n  }\n\n}\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    constructor(http, datePipe) {\n      this.http = http;\n      this.datePipe = datePipe;\n      this.usuarioUrl = '';\n      this.usuarioUrl = environment.apiUrl + '/usuarios';\n    }\n\n    pesquisar(filtro) {\n      let params = new HttpParams();\n      params = params.set('page', filtro.pagina);\n      params = params.set('size', filtro.itensPorPagina);\n\n      if (filtro.nome) {\n        params = params.set('nome', filtro.nome);\n      }\n\n      if (filtro.email) {\n        params = params.set('email', filtro.email);\n      }\n\n      const headers = new HttpHeaders().append('Authorization', 'Basic YWRtaW5AYWxnYW1vbmV5LmNvbTphZG1pbg==');\n      return this.http.get(`${this.usuarioUrl}`, {\n        headers,\n        params\n      }).toPromise().then(response => {\n        const usuarios = response['content'];\n        const resultado = {\n          usuarios: usuarios,\n          total: response['totalElements']\n        };\n        return resultado;\n      });\n    }\n\n    excluir(codigo) {\n      const headers = new HttpHeaders().append('Authorization', 'Basic YWRtaW5AYWxnYW1vbmV5LmNvbTphZG1pbg==');\n      return this.http.delete(`${this.usuarioUrl}/${codigo}`, {\n        headers\n      }).toPromise().then(() => null);\n    }\n\n    adicionar(usuario) {\n      const headers = new HttpHeaders().append('Authorization', 'Basic YWRtaW5AYWxnYW1vbmV5LmNvbTphZG1pbg==').append('Content-Type', 'application/json');\n      return this.http.post(this.usuarioUrl, usuario, {\n        headers\n      }).toPromise();\n    }\n\n    atualizar(usuario) {\n      const headers = new HttpHeaders().append('Authorization', 'Basic YWRtaW5AYWxnYW1vbmV5LmNvbTphZG1pbg==').append('Content-Type', 'application/json');\n      return this.http.put(`${this.usuarioUrl}/${usuario.codigo}`, usuario, {\n        headers\n      }).toPromise().then(response => {\n        return response['content'];\n      });\n    }\n\n    buscarPorCodigo(codigo) {\n      const headers = new HttpHeaders().append('Authorization', 'Basic YWRtaW5AYWxnYW1vbmV5LmNvbTphZG1pbg==');\n      return this.http.get(`${this.usuarioUrl}/${codigo}`, {\n        headers\n      }).toPromise().then(response => {\n        // this.converterStringsParaData([response]);\n        return response;\n      });\n    }\n\n  }\n\n  UsuarioService.ɵfac = function UsuarioService_Factory(t) {\n    return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.DatePipe));\n  };\n\n  UsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioService,\n    factory: UsuarioService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioService;\n})();","map":null,"metadata":{},"sourceType":"module"}